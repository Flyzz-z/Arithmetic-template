#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<queue>
#include<cstring>
#include<string>
#include<cmath>
#include<vector>
#include<stack>
using namespace std;
const int maxn=100;
int w[maxn][maxn],n;
int lx[maxn],ly[maxn];
int lft[maxn];
bool S[maxn],T[maxn];

bool match(int i)
{
    S[i]=true;
    for(int j=1;j<=n;j++)
    {
        if(lx[i]+ly[j]==w[i][j]&&!T[j])
        {
            T[j]=true;
            if(!lft[j]||match(lft[j]))
            {
                lft[j]=i;
                return true;
            }
        }
    }
    return false;
}

void update()
{
    int ma=1<<30;
    for(int i=1;i<=n;i++) 
    {
        if(S[i])
        {
            for(int j=1;j<=n;j++)
            {
                if(!T[j])
                ma=min(ma,lx[i]+ly[j]-w[i][j]);
            }
        }
    }
    for(int i=1;i<=n;i++)
    {
        if(S[i]) lx[i]-=ma;
        if(T[i]) ly[i]+=ma;
    }
}

void KM()
{
    for(int i=1;i<=n;i++)
    {
        lft[i]=lx[i]=ly[i]=0;
        for(int j=1;j<=n;j++)
        lx[i]=max(lx[i],w[i][j]);       
    }
    for(int i=1;i<=n;i++)
    {
        while(1)
        {
            memset(S,0,sizeof(S));
            memset(T,0,sizeof(T));
            memset(lft,0,sizeof(lft));
            if(match(i)) break;
            else  update();
        }
    }
}
